#!/usr/bin/env ruby

require 'yaml'

eval File.read("#{ARGV[0]}/.deploy_vars")

filename = '.elasticbeanstalk/config.yml'
data = {
  "global" => {
    "application_name" => EB_APP_NAME || raise('EB_APP_NAME missing'),
    "default_ec2_keyname" => AWS_EC2_KEYNAME || raise('AWS_EC2_KEYNAME missing'),
    "default_platform" => 'docker',
    "default_region" => AWS_REGION || raise('AWS_REGION missing'),
    "workspace_type" => "Application"
  }
}
File.open(filename, "wb+") { |f| f.write data.to_yaml }

def create_file_with_content(ebext_name, output_file, content)
  filename = ".ebextensions/#{ebext_name}.config"
  data = {
    "container_commands" => {
      "01_execute" => {
        "command" => "echo \"#{content}\" > #{output_file}",
        "ignoreErrors" => "false"
      }
    }
  }
  # default to 81 https://ruby-doc.org/stdlib-2.7.1/libdoc/psych/rdoc/Psych.html#method-c-dump
  File.open(filename, "wb+") { |f| f.write Psych.dump(data, :line_width => 150) }
end

create_file_with_content('machine-identification', '/home/ec2-user/machine-id', ARGV[2])

command = %q[if [ \"\$1\" = \"bash\" ]
then
  cmd=\"bash\"
else
  cmd=\"bundle exec rails c -e staging\"
fi
echo \"executing \$cmd on container\"
sudo docker exec -it \$(sudo docker container ls | tail -n 1 | awk {'print \$1'}) \$cmd]
command.sub!('staging', ARGV[1]) if ARGV[1] != 'staging'
create_file_with_content('create_docker_jump', '/home/ec2-user/jumpin', command)

app_name_parts = EB_APP_NAME.split(/_/)
figlet_content = `toilet "#{app_name_parts.shift}" -w 200` + "\n"
figlet_content += `toilet "#{app_name_parts.join(' ')} #{ARGV[1]}" -w 200` + "\n"
create_file_with_content('motd_override', '/etc/motd', figlet_content.gsub(/"/, '\"'))
